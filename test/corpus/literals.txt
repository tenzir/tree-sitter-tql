==================
Null literal
==================

select null

---

(program
  (pipeline
    (statement
      (invocation
        (entity
          (identifier))
        (arguments
          (argument
            (expression
              (primary_expression
                (literal)))))))))

==================
Boolean literals
==================

where active == true and disabled == false

---

(program
  (pipeline
    (statement
      (invocation
        (entity
          (identifier))
        (arguments
          (argument
            (expression
              (binary_expression
                (expression
                  (binary_expression
                    (expression
                      (primary_expression
                        (identifier)))
                    (expression
                      (primary_expression
                        (literal)))))
                (expression
                  (binary_expression
                    (expression
                      (primary_expression
                        (identifier)))
                    (expression
                      (primary_expression
                        (literal)))))))))))))

==================
Integer literals
==================

select 0, 42, -100

---

(program
  (pipeline
    (statement
      (invocation
        (entity
          (identifier))
        (arguments
          (argument
            (expression
              (primary_expression
                (literal
                  (number)))))
          (argument
            (expression
              (primary_expression
                (literal
                  (number)))))
          (argument
            (expression
              (unary_expression
                (expression
                  (primary_expression
                    (literal
                      (number))))))))))))

==================
Float literals
==================

select 3.14, 0.5, -2.718

---

(program
  (pipeline
    (statement
      (invocation
        (entity
          (identifier))
        (arguments
          (argument
            (expression
              (primary_expression
                (literal
                  (number)))))
          (argument
            (expression
              (primary_expression
                (literal
                  (number)))))
          (argument
            (expression
              (unary_expression
                (expression
                  (primary_expression
                    (literal
                      (number))))))))))))

==================
String literals
==================

select "hello", "world", "with \"quotes\""

---

(program
  (pipeline
    (statement
      (invocation
        (entity
          (identifier))
        (arguments
          (argument
            (expression
              (primary_expression
                (literal
                  (string)))))
          (argument
            (expression
              (primary_expression
                (literal
                  (string)))))
          (argument
            (expression
              (primary_expression
                (literal
                  (string))))))))))

==================
Blob string literals
==================

select b"foo", b"\x41", b"multi
line"

---

(program
  (pipeline
    (statement
      (invocation
        (entity
          (identifier))
        (arguments
          (argument
            (expression
              (primary_expression
                (literal
                  (string)))))
          (argument
            (expression
              (primary_expression
                (literal
                  (string)))))
          (argument
            (expression
              (primary_expression
                (literal
                  (string))))))))))

==================
Raw string literals
==================

select r"raw\nvalue", r#"with ""quotes"""#, r"first line
second line"

---

(program
  (pipeline
    (statement
      (invocation
        (entity
          (identifier))
        (arguments
          (argument
            (expression
              (primary_expression
                (literal
                  (string)))))
          (argument
            (expression
              (primary_expression
                (literal
                  (string)))))
          (argument
            (expression
              (primary_expression
                (literal
                  (string))))))))))

==================
Raw blob string literals
==================

select br"raw\nblob", br#"hash # value"#, br"line1
line2"

---

(program
  (pipeline
    (statement
      (invocation
        (entity
          (identifier))
        (arguments
          (argument
            (expression
              (primary_expression
                (literal
                  (string)))))
          (argument
            (expression
              (primary_expression
                (literal
                  (string)))))
          (argument
            (expression
              (primary_expression
                (literal
                  (string))))))))))

==================
Time literals
==================

select 2024-06-15T14:30:45.123456, 2100-01-01, 2025-01-02T00:00:00Z, 2023-02-20T12:34:56+02:00

---

(program
  (pipeline
    (statement
      (invocation
        (entity
          (identifier))
        (arguments
          (argument
            (expression
              (primary_expression
                (literal
                  (time)))))
          (argument
            (expression
              (primary_expression
                (literal
                  (time)))))
          (argument
            (expression
              (primary_expression
                (literal
                  (time)))))
          (argument
            (expression
              (primary_expression
                (literal
                  (time))))))))))

==================
Format string literals
==================

select f"pre {foo.bar[0]} post", f"{{}}"

---

(program
  (pipeline
    (statement
      (invocation
        (entity
          (identifier))
        (arguments
          (argument
            (expression
              (primary_expression
                (format_expr
                  (format_text)
                  (format_replacement
                    (expression
                      (index_expression
                        (expression
                          (member_expression
                            (expression
                              (primary_expression
                                (identifier)))
                            (identifier)))
                        (expression
                          (primary_expression
                            (literal
                              (number)))))))
                  (format_text)))))
          (argument
            (expression
              (primary_expression
                (format_expr
                  (format_text))))))))))

==================
List literal
==================

select [1, 2, 3]

---

(program
  (pipeline
    (statement
      (invocation
        (entity
          (identifier))
        (arguments
          (argument
            (expression
              (primary_expression
                (list
                  (expression
                    (primary_expression
                      (literal
                        (number))))
                  (expression
                    (primary_expression
                      (literal
                        (number))))
                  (expression
                    (primary_expression
                      (literal
                        (number)))))))))))))

==================
Record literal
==================

select {foo: "bar", count: 42}

---

(program
  (pipeline
    (statement
      (invocation
        (entity
          (identifier))
        (arguments
          (argument
            (expression
              (primary_expression
                (record
                  (record_field
                    (identifier)
                    (expression
                      (primary_expression
                        (literal
                          (string)))))
                  (record_field
                    (identifier)
                    (expression
                      (primary_expression
                        (literal
                          (number))))))))))))))

==================
SI suffix numbers
==================

select 1Mi, 2.5k, -3Gi

---

(program
  (pipeline
    (statement
      (invocation
        (entity
          (identifier))
        (arguments
          (argument
            (expression
              (primary_expression
                (literal
                  (number)))))
          (argument
            (expression
              (primary_expression
                (literal
                  (number)))))
          (argument
            (expression
              (unary_expression
                (expression
                  (primary_expression
                    (literal
                      (number))))))))))))

==================
List spread literal
==================

select [...items, 3]

---

(program
  (pipeline
    (statement
      (invocation
        (entity
          (identifier))
        (arguments
          (argument
            (expression
              (primary_expression
                (list
                  (spread
                    (expression
                      (primary_expression
                        (identifier))))
                  (expression
                    (primary_expression
                      (literal
                        (number)))))))))))))

==================
Record spread literal
==================

select {...base, count: 2}

---

(program
  (pipeline
    (statement
      (invocation
        (entity
          (identifier))
        (arguments
          (argument
            (expression
              (primary_expression
                (record
                  (spread
                    (expression
                      (primary_expression
                        (identifier))))
                  (record_field
                    (identifier)
                    (expression
                      (primary_expression
                        (literal
                          (number))))))))))))))

==================
Multiline record literal
==================

select {
  foo: 1,
  bar: 2,
}

---

(program
  (pipeline
    (statement
      (invocation
        (entity
          (identifier))
        (arguments
          (argument
            (expression
              (primary_expression
                (record
                  (record_field
                    (identifier)
                    (expression
                      (primary_expression
                        (literal
                          (number)))))
                  (record_field
                    (identifier)
                    (expression
                      (primary_expression
                        (literal
                          (number))))))))))))))

==================
Duration literals
==================

every 5s
delay 10min
timeout 1h

---

(program
  (pipeline
    (statement
      (invocation
        (entity
          (identifier))
        (arguments
          (argument
            (expression
              (primary_expression
                (literal
                  (duration))))))))
    (statement
      (invocation
        (entity
          (identifier))
        (arguments
          (argument
            (expression
              (primary_expression
                (literal
                  (duration))))))))
    (statement
      (invocation
        (entity
          (identifier))
        (arguments
          (argument
            (expression
              (primary_expression
                (literal
                  (duration))))))))))

==================
IP address literal
==================

where ip == 192.168.1.1

---

(program
  (pipeline
    (statement
      (invocation
        (entity
          (identifier))
        (arguments
          (argument
            (expression
              (binary_expression
                (expression
                  (primary_expression
                    (identifier)))
                (expression
                  (primary_expression
                    (literal
                      (ip))))))))))))

==================
Subnet literal
==================

where subnet == 10.0.0.0/8

---

(program
  (pipeline
    (statement
      (invocation
        (entity
          (identifier))
        (arguments
          (argument
            (expression
              (binary_expression
                (expression
                  (primary_expression
                    (identifier)))
                (expression
                  (primary_expression
                    (literal
                      (subnet))))))))))))
